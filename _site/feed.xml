<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-12-11T20:49:58-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Random Musings</title><subtitle>This page contains useless nonsense extruded from my brain. Probably some code and other  potentially useful things as well.  Peruse at your own risk. </subtitle><entry><title type="html">Choosing a Desktop Environment</title><link href="http://localhost:4000/beginners/customization/configuration/2020/12/06/desktop-environments.html" rel="alternate" type="text/html" title="Choosing a Desktop Environment" /><published>2020-12-06T00:00:00-05:00</published><updated>2020-12-06T00:00:00-05:00</updated><id>http://localhost:4000/beginners/customization/configuration/2020/12/06/desktop-environments</id><content type="html" xml:base="http://localhost:4000/beginners/customization/configuration/2020/12/06/desktop-environments.html">&lt;h2 id=&quot;what-is-a-desktop-environment&quot;&gt;What is a Desktop Environment&lt;/h2&gt;

&lt;p&gt;If you’re coming from the Windows or Mac/OSX world you’re familiar with desktop environment.  You
probably haven’t ever thought about it beyond setting a background image or wallpaper, or rearranging
your application icons in a funny pattern.  The graphical desktop has been around for a very long
time, and at this point it’s one of the fundamental pieces of using a computer.&lt;/p&gt;

&lt;p&gt;With both Windows and OSX you don’t really get much of a choice when it comes to which Desktop
Environment you get.  In Windows you get the start menu button in the bottom left corner of the
screen, the bar on the bottom of the screen where all of your open applications live, a nifty little
recycle icon on the desktop etc.  The Windows desktop environment is more than just that though.&lt;/p&gt;

&lt;p&gt;You may be familiar with using the Command Prompt to do some things, or PowerShell even.  You get
the same Image viewer, task manager, and lots of other tools that might not seem to be part of the
“desktop”, they are part of the basic “Windows Experience” that millions of people have become
familiar with over the last 30 years or so.&lt;/p&gt;

&lt;p&gt;The Desktop Environment (DE for short) comes with all kinds of little things that make
using a computer easier.  They’ll typically include at least (but not limited too):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Terminal&lt;/li&gt;
  &lt;li&gt;A wallpaper setting tool&lt;/li&gt;
  &lt;li&gt;An image viewer&lt;/li&gt;
  &lt;li&gt;A graphical file manager&lt;/li&gt;
  &lt;li&gt;Customization Options&lt;/li&gt;
  &lt;li&gt;Panel&lt;/li&gt;
  &lt;li&gt;Session manager&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some DEs include tools to connect with your Android phone, or music players, email clients, and the
list can go on and on and on…..&lt;/p&gt;

&lt;p&gt;This may all seem pretty obvious, but it’s not something people tend to think about.  It’s something
important to keep in mind when preparing to install a Linux distro on your machine, and even more
important to think about when distro hopping.&lt;sup id=&quot;fnref:hopping&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:hopping&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; Frequently I see new Linux users trying to
compare one distro to another, but really what they’re comparing is a feature of one DE to another.&lt;/p&gt;

&lt;h2 id=&quot;comparing-desktop-environments&quot;&gt;Comparing Desktop Environments&lt;/h2&gt;

&lt;p&gt;The DE is essentially the one thing you will interact with when it comes to you actually using your
computer.  It will control how you open applications, what your desktop looks like, where the
buttons are, how the system notifies you about things, in short: The DE controls &lt;em&gt;how&lt;/em&gt; you interact
with your computer.&lt;/p&gt;

&lt;p&gt;I’ve heard a couple of the more well-known Linux YouTube personalities offer the opinion that which
distro you choose is essentially irrelevant and that it’s more important to pick a DE that you like,
and that works for you. I would almost completely agree with that, and for someone just dipping
their toes in the vast ocean that is Linux, I’d say picking the DE is substantially more important
than which distro someone uses.&lt;/p&gt;

&lt;p&gt;With that in mind I’ll share some of my thoughts on some of the more popular DEs, and try to make
some basic comparisons about them.  Ultimately choosing the “right” DE is up to you, but hopefully I
can provide some info to help you determine which DE might be the best for you.&lt;/p&gt;

&lt;p&gt;As with all things Linuxy, there is not really a single right answer, and the choice doesn’t have to
be permanent.  You can try multiple DEs and find the one that works best for you. There are plenty
of other options beyond the four I’ve listed below, I encourage you to do your own research, and
while I’ve included videos for each of them, check out the individual project websites, the
information below is really just intended to be a starting point.&lt;/p&gt;

&lt;h3 id=&quot;gnome&quot;&gt;Gnome&lt;/h3&gt;

&lt;p&gt;Lets start with the Elephant in the Linux user space.  Gnome is extraordinarily popular, it’s the
default DE for several major Distros (Ubuntu and Fedora among others).  It’s fully fleshed out and
offers what many would consider a fantastic user experience.&lt;/p&gt;

&lt;p&gt;Gnome has a very unique look, and provides some truly fantastic tools for getting things done.  It
integrates well with cloud services like Google providing a seamless experience for end users.&lt;/p&gt;

&lt;p&gt;This is a 5 minute walkthrough of the latest version of Gnome (at the time of this writing Gnome 3)&lt;/p&gt;
&lt;style&gt;
.embed-youtube {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 25px;
    height: 0
}

.embed-youtube iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
&lt;/style&gt;

&lt;div class=&quot;embed-youtube&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/BB7pBRi9Bbk&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;For more information check out the project’s webpage:  &lt;a href=&quot;https://www.gnome.org/&quot;&gt;Gnome.org&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;kde&quot;&gt;KDE&lt;/h3&gt;

&lt;p&gt;KDE is another very popular, well-built, fully featured DE.  The project has been around for quite
some time, and they’ve one of the best looking DEs out there.  The Plasma desktop is truly good
looking, and offers a ton of customization options, and lots of really cool features.  They offer a
giant &lt;a href=&quot;https://apps.kde.org/&quot;&gt;list of applications&lt;/a&gt; that integrate tightly with the DE, offering a
really good user experience.&lt;/p&gt;

&lt;p&gt;One of the more interesting features KDE offers is the KDE connect feature which allows integration
between an Android phone and the computer.&lt;/p&gt;

&lt;p&gt;A quick tour of the latest version from KDE:&lt;/p&gt;

&lt;style&gt;
.embed-youtube {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 25px;
    height: 0
}

.embed-youtube iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
&lt;/style&gt;

&lt;div class=&quot;embed-youtube&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/h_YdaFNsPBE&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;As always check out the &lt;a href=&quot;https://kde.org/&quot;&gt;project website&lt;/a&gt; for more information&lt;/p&gt;

&lt;h3 id=&quot;cinnamon&quot;&gt;Cinnamon&lt;/h3&gt;

&lt;p&gt;Cinnamon is kind of an outlier in this list.  It is one of the few DEs that doesn’t have a dedicated
project (it’s built and maintained by the &lt;a href=&quot;https://linuxmint.com/&quot;&gt;Linux Mint team&lt;/a&gt;), it is
available for most distros. In my opinion, one of the best things about Cinnamon, is that it feels a
lot like Windows.  It makes transitioning to Linux a bit easier for those who aren’t looking for
something wildly different.  I actually used Cinnamon and Linux Mint for quite sometime, and found very few
negative things to whine about, it was a very solid option, and is still something I recommend for
many people.&lt;/p&gt;

&lt;p&gt;Have another 5 minute video tour:&lt;/p&gt;

&lt;style&gt;
.embed-youtube {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 25px;
    height: 0
}

.embed-youtube iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
&lt;/style&gt;

&lt;div class=&quot;embed-youtube&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/TBSwFc6hkLY&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;For more information about Linux Mint and Cinnamon click &lt;a href=&quot;https://linuxmint.com/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;xfce&quot;&gt;XFCE&lt;/h3&gt;

&lt;p&gt;The XFCE project prides itself on making a lightweight DE, that is still fully featured.  All of the
basic important things are there.  Admittedly, it’s not the best looking DE when it’s installed, but
it is incredibly customizable, and with some tweaking it can look very good.&lt;/p&gt;

&lt;p&gt;Another quick video:&lt;/p&gt;

&lt;style&gt;
.embed-youtube {
    position: relative;
    padding-bottom: 56.25%;
    padding-top: 25px;
    height: 0
}

.embed-youtube iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
&lt;/style&gt;

&lt;div class=&quot;embed-youtube&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/9ABYlcmqQ-Q&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;The XFCE project actually has very nice tour of version 4.14 &lt;a href=&quot;https://xfce.org/about/tour&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;other-options&quot;&gt;Other Options&lt;/h2&gt;

&lt;p&gt;Fully packaged desktop environments are probably the most commonly used options, but there are other
options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;No Desktop at all.  Interacting with the machine only through a terminal interface is very common
with servers.&lt;/li&gt;
  &lt;li&gt;Window managers. These are tools that provide a method for having graphical displays running, but
do not function as a full desktop environment.  This can provide more control over the user experience, but takes a bit more configuration than a typical DE. I will cover some of the window manager options and configuration in another post.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/03/what-is-linux.html&quot;&gt;What is Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/04/why-linux.html&quot;&gt;Why should you use Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/11/which-linux.html&quot;&gt;Which Linux should you use?&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h3&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:hopping&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Distro hopping is changing from one distro to another, something many people do, especially when first starting out with Linux.  Generally it’s done in an effort to find the “perfect distro”. &lt;a href=&quot;#fnref:hopping&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">What is a Desktop Environment</summary></entry><entry><title type="html">Step 3: Putting it all together</title><link href="http://localhost:4000/self-hosting/2020/11/15/step3.html" rel="alternate" type="text/html" title="Step 3: Putting it all together" /><published>2020-11-15T00:00:00-05:00</published><updated>2020-11-15T00:00:00-05:00</updated><id>http://localhost:4000/self-hosting/2020/11/15/step3</id><content type="html" xml:base="http://localhost:4000/self-hosting/2020/11/15/step3.html">&lt;h2 id=&quot;recaps-are-a-thing-right&quot;&gt;Recaps are a thing right?&lt;/h2&gt;

&lt;p&gt;A quick recap of what my current self-hosted lab looks like is probably in order.  There are 4
servers in play:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Gateway: This is a server that just takes traffic from the public internet (TCP http &amp;amp; https
traffic only) and shoves it down a VPN pipe to my home Server&lt;/li&gt;
  &lt;li&gt;The Home Server: This is the workhorse server.  It’s hosting all of the content, applications and
data.  Traefik is running as the reverse proxy routing inbound traffic to the appropriate
applications as needed, and also handling certificates through LetsEncrypt&lt;/li&gt;
  &lt;li&gt;The Pihole server(s): between setting everything up in Step 2 and the time of writing this I added
a second Pihole server, after an unplanned update-related outage taught me a valuable lesson
about resiliency and redundancy and the need for at least one of those things.  So now there are
two PiHole servers, which are each updated on their own with my internal DNS records as needed.
It’s not a great plan, and automating that is on the to-do list.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Knowing that traffic will come in from the outside world and hit the right application based on
sub-domain, the time has finally come to put actual useful things in place.&lt;/p&gt;

&lt;h2 id=&quot;nextcloud&quot;&gt;NextCloud&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;NextCloud&lt;/a&gt; is a fairly impressive cloud storage system.  It is an almost
complete drop-in for someone that is using Google for everything cloud.  It provides file storage,
photo storage, cloud sync with iOS and Android devices, a chat/video conference platform, a couple
options for document creation/editing/collaboration.  It really is a very full featured application.
Admittedly, not all of the assorted functions have full feature parity with the major players. That
being said, it’s an open source product that handles the essentials quite well.&lt;/p&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;There are myriad ways to run your own NextCloud instance, everything from building from source on a
dedicated machine to turn-key cloud hosting options where you have little to no maintenance to worry
about.&lt;/p&gt;

&lt;p&gt;Personally I went the docker route, because of the simplicity of the setup, and the ability to
migrate the whole thing as needed.  Also, I’m lazy and my docker-compose file is 29 lines long for
NextCloud.  It really doesn’t get much more simple than that.&lt;/p&gt;

&lt;p&gt;There are tons of docker config examples out there, but I’ll include mine here just to add to the
noise.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2'&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mariadb&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;--transaction-isolation=READ-COMMITTED --binlog-format=ROW&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/data/nc_db/:/var/lib/mysql&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_ROOT_PASSWORD=&amp;lt;PASSWORD&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_PASSWORD=&amp;lt;PASSWORD&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_DATABASE=&amp;lt;DATABASE_NAME&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;MYSQL_USER=&amp;lt;DATABASE_USERNAME&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nextcloud&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/path/to/persistent/directory/:/var/www/html&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/path/to/config/file/php.ini:/usr/local/etc/php/php.ini&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;unless-stopped&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;traefik.enable=true&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;traefik.http.routers.&amp;lt;TRAEFIK_RULE_NAME&amp;gt;.rule=Host(`subdomain.domain.com`)&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;traefik.http.routers.&amp;lt;TRAEFIK_RULE_NAME&amp;gt;.tls.certresolver=le&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;traefik.http.middlewares.&amp;lt;TRAEFIK_REDIRECT_RULE_NAME&amp;gt;.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;traefik.http.middlewares.&amp;lt;TRAEFIK_REDIRECT_RULE_NAME&amp;gt;.redirectregex.replacement=https://$${1}/remote.php/dav/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This highlights why I like Traefik so much, 5 lines in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yaml&lt;/code&gt; file and everything
is in place, and as soon as DNS records are in place, automatic SSL certificate management is in
place and it all pretty much just works.  The last two lines in there are to handle some NextCloud
specific re-directs which NextCloud needs for the assorted apps to function properly.&lt;/p&gt;

&lt;p&gt;There is also a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php.ini&lt;/code&gt; file needed to allow some other features, in my case it’s the ability to
upload large files.&lt;/p&gt;

&lt;p&gt;php.ini:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upload_max_filesize = 2048M
post_max_size = 2048M
max_execution_time = 200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Adding that file and mounting it to the container as seen above solved my issue with uploading
files.  There are some default limitations in the web server the NextCloud container uses, so this is
used to override those settings.&lt;/p&gt;

&lt;p&gt;There is some additional configuration needed in the Application itself to fully complete the
install process.  Things like adding users, setting up  Email settings etc, are all configured
within NextCloud.  The &lt;a href=&quot;https://docs.nextcloud.com/server/20/admin_manual/index.html&quot;&gt;docs&lt;/a&gt; is very
through, and I really do recommend going through the entire Admin manual before starting down this
road.&lt;/p&gt;

&lt;p&gt;One of the great things about NextCloud is the very large community, there are a ton of users out
there, and lots of available solutions for most potential problems. There is a very active Telegram
user group &lt;a href=&quot;https://t.me/Nextcloud&quot;&gt;here&lt;/a&gt;.  I highly recommend joining that group if you come across
any challenges getting your own instance up and running.&lt;/p&gt;

&lt;h3 id=&quot;a-note-about-security&quot;&gt;A Note about Security&lt;/h3&gt;

&lt;p&gt;Securing any application that is available on the public internet is an incredibly important step.
There are a million and one ideas about what is best, and ultimately how something is secured is up
to the person managing the application.  I won’t offer an opinion on the best methodology, or what
exactly should be done.  It’s a constantly moving target, and hosting applications on the public
internet is a constant process. It’s important to keep up-to-date on potential vulnerabilities, and
patches.&lt;/p&gt;

&lt;p&gt;At a bare minimum I recommend a two-factor authentication scheme (not via SMS), Authy is a free
application that can be used to generate 2FA tokens, and there is a TOTP app in the Nextcloud store
that supports Authy.  There are several other methods for 2FA, again, research and determine the
best option for your use-case.&lt;/p&gt;

&lt;h2 id=&quot;photoprism&quot;&gt;PhotoPrism&lt;/h2&gt;

&lt;p&gt;One of the biggest gaps in using NextCloud to replace Google, or Microsoft’s OneDrive is the photos
support.  It’s sluggish, and laggy, basically no matter what.  Sharing is pretty powerful, but the
user experience leaves a lot to be desired.  There is a tool that integrates with NextCloud that
does seem to excel at hosting photos, at least it does a good enough job for me.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://photoprism.pro/&quot;&gt;PhotoPrism&lt;/a&gt; is a self-hosted photo gallery. It is still very much an early
product, and lacks some features that may be a deal-breaker for many.  It does however integrate
with NextCloud natively and will pull all photos stored in NextCloud and allows for creation of
semi-public albums.  Users can create a link to an album and allow people with that link to
view/download photos from that Album, without sharing the entire collection of photos being hosted.
In my case it works very well to allow me to create albums of “guys trips” I’ve taken, and share
those photos with the people that were on that trip.&lt;/p&gt;

&lt;p&gt;This is a docker native app, and the team has some very good &lt;a href=&quot;https://docs.photoprism.pro/&quot;&gt;documentation&lt;/a&gt; on setting up your own instance.&lt;/p&gt;

&lt;p&gt;One of the biggest downsides for me is the lack of user account options, there is only a single
account allowed, so multiple users can’t host their own photos.  This is something the PhotoPrism
team has said maybe implemented in a later release, and may be a paid feature.  There are plenty of
other options out there, this is just where I landed.&lt;/p&gt;

&lt;h2 id=&quot;bookstack&quot;&gt;Bookstack&lt;/h2&gt;

&lt;p&gt;Throughout this entire process the one thing that I kept doing, was re-doing things.  I’d screw
something up, and have to do the entire thing all over again. So I decided one of the things I
absolutely needed was a documentation site of some sort.  I chose &lt;a href=&quot;https://www.bookstackapp.com/&quot;&gt;Bookstack&lt;/a&gt; because I like the way it looks and organizes data in a hierarchal manner.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shelves
    &lt;ul&gt;
      &lt;li&gt;Books on Shelves
        &lt;ul&gt;
          &lt;li&gt;Chapters in Books
            &lt;ul&gt;
              &lt;li&gt;Pages in Chapters&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It does allow the user to use some/all/none of this hierarchy. I.e. you can have a page in a book,
with no chapter associated, or a book not on any shelf.  You can also change your mind later an put
a page in a book or a chapter, or put a book on a shelf.&lt;/p&gt;

&lt;p&gt;Again, this is very straightforward docker-compose file that stands up the database and the
application for you.  It’s very well documented, so I won’t include my version as I’m just using one
of the basic configs.  Their &lt;a href=&quot;https://github.com/linuxserver/docker-bookstack&quot;&gt;Github page&lt;/a&gt; has a
great example, and mine is almost identical to that one.&lt;/p&gt;

&lt;h2 id=&quot;the-end&quot;&gt;The End?&lt;/h2&gt;

&lt;p&gt;At this point hosting these three applications has met my original goal of having a place to store
and sync data from my assorted devices.  There are other things I will likely end up hosting, and
there will no doubt be changes to my infrastructure and my methods.  I’ll update and add other posts
as I change things.&lt;/p&gt;

&lt;h3 id=&quot;related-posts&quot;&gt;Related Posts&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/self-hosting/2020/10/18/step1.html&quot;&gt;Step 1: Laying the Ground Work&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/self-hosting/2020/11/01/step2.html&quot;&gt;Step 2: The Foundation&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Recaps are a thing right?</summary></entry><entry><title type="html">Step 2: The Foundation</title><link href="http://localhost:4000/self-hosting/2020/11/01/step2.html" rel="alternate" type="text/html" title="Step 2: The Foundation" /><published>2020-11-01T00:00:00-04:00</published><updated>2020-11-01T00:00:00-04:00</updated><id>http://localhost:4000/self-hosting/2020/11/01/step2</id><content type="html" xml:base="http://localhost:4000/self-hosting/2020/11/01/step2.html">&lt;h2 id=&quot;adding-a-layer&quot;&gt;Adding a layer&lt;/h2&gt;

&lt;p&gt;When I started this project I had an idea of my end goal, with some very specific targets I wanted
to hit, but I knew that along the path I would find things that required some adjustment.  For
instance: I figured I’d want to put pi-hole as a DNS server in place, but that was a fairly low
priority for the overall project.  Right up until it wasn’t.  I realized while setting up Traefik
and working through a guide on that process that I’d need DNS in place internally for Traefik to be
able to work it’s magic effectively.&lt;/p&gt;

&lt;p&gt;So while I was able to get Traefik up and working without DNS, and it’s easy enough, it wasn’t
working like I intended.  If someone is reading this and following along, I definitely suggest
starting with a DNS server, which makes life a little easier for other things beyond setting up
Traefik.  So that’s the order I’ll present the project in, even though it’s not exactly how I did it.&lt;/p&gt;

&lt;p&gt;Another thing I realized fairly quickly is that I’ll want to setup access from outside my LAN sooner
rather than later.  It’s easier to troubleshoot a system with fewer moving pieces, so being able to
access a simple tool from both on and off my internal network is a good way to make sure that I’ve
got things working the way I like.&lt;/p&gt;

&lt;h2 id=&quot;dns-via-pihole&quot;&gt;DNS via PiHole&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pi-hole.net/&quot;&gt;PiHole&lt;/a&gt; is a pretty nifty little project.  A lightweight DNS server that comes with a hefty default
block list just chock-full of Ad serving sites.  Every time a user loads a website with Ads each ad
is linked via DNS to a server delivering that Ad content.  PiHole just dumps those DNS requests in
pit of despair and thus, the end user never sees them.  They’ve got a lot of good documentation on
their website, and really setting it up is pretty straightforward.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install PiHole on a device&lt;/li&gt;
  &lt;li&gt;Point a device at the PiHole IP for it’s DNS requests&lt;/li&gt;
  &lt;li&gt;Enjoy less ads&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The exact steps needed for each piece of that will vary depending on all kinds of things.&lt;/p&gt;

&lt;p&gt;In my case it was a little more complex.  My router will allow me to define the DNS servers
manually, which is a good start, but it doesn’t just re-direct DNS queries to the PiHole by default,
which leads to some weirdness, a little DuckDuckGoing and I found a setting that forces the router
to just push all queries to the PiHole&lt;sup id=&quot;fnref:router&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:router&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;It’s also recommended to make the PiHole the DHCP server, which is great, except my router doesn’t
off a setting to disable the DHCP server, and having two DHCP servers on a network is just a recipe
for disaster.  So again, there was some tweaking for my setup.  This will be the case for most
setups, since each network is going to have it’s own quirks.&lt;/p&gt;

&lt;h2 id=&quot;traefik&quot;&gt;Traefik&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt; is a very cool project, it’s a very powerful reverse proxy&lt;sup id=&quot;fnref:proxy&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:proxy&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;, and it’s got a ton of
options.  Which means that it can be very complex to configure, there’s a lot going on, and there’s
not really a ‘point-and-click’ install process for it.  This can turn some people off, and that’s
totally understandable.&lt;/p&gt;

&lt;p&gt;For me, however, this is more about learning how things work, so why not
push myself and take the more difficult path.  If I was just trying to get a simple service up and
running, Traefik would not be the route I would take. I do plan on setting up multiple services, so
Traefik makes sense, especially since I’m planning on running most of them through Docker.&lt;/p&gt;

&lt;p&gt;Setting up Traefik wasn’t especially difficult, and I only came across a single issue.  I used this
&lt;a href=&quot;https://theorangeone.net/posts/hello-world-with-traefik/&quot;&gt;tutorial&lt;/a&gt; written by TheOrangeOne, a very
knowledgeable individual, especially in the self-hosting arena.&lt;/p&gt;

&lt;p&gt;The single issue I came across was tied to Firewalld, specifically Firewalld doing it’s job and
blocking traffic.  Putting in some rules to allow traffic on the needed ports (80, 443, 8080) fixed
the issue, and once I had my DNS up and running like it should, everything worked as intended.&lt;/p&gt;

&lt;h2 id=&quot;offnet-access&quot;&gt;OffNet Access&lt;/h2&gt;

&lt;p&gt;I made the choice to setup my offnet access at this point to simplify troubleshooting.  Once I had a
basic Traefik setup in place and running, I realized it would be easier to setup access into my
server with only a single service running, which will allow me to test access with only a few moving
parts.&lt;/p&gt;

&lt;p&gt;The basic goal for this was to have a VPS setup which will function as a gateway server of sorts
with a static IP I can point external DNS to, and allow that to forward traffic from the public
internet via VPN to my internal server.&lt;/p&gt;

&lt;h3 id=&quot;vps&quot;&gt;VPS&lt;/h3&gt;

&lt;p&gt;To setup a gateway server requires a server.  Preferably with a static IP that can be easily
referenced by the public DNS services.  This is pretty easily done with a number of hosting
providers.  As this server will not really hold any of my personal data I’m not too worried about
the location of the server geographically, other than keeping it relatively close to my actual
location.&lt;/p&gt;

&lt;p&gt;I did some research and price comparison, and I chose &lt;a href=&quot;https://www.linode.com/&quot;&gt;Linode&lt;/a&gt; as my
hosting provider.  I picked their smallest server option “Nanode” which has 1G of Ram, 1 CPU, and
25G of storage. This should be plenty of power for what I’m trying to do.  I’ll only be running two
applications, a proxy server, and a VPN server.&lt;/p&gt;

&lt;p&gt;Something important to remember is that this server is by it’s very nature exposed to the internet.
So securing it is priority 1.  As soon as the server was up I:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Created a non-root user&lt;/li&gt;
  &lt;li&gt;Enabled SSH key authentication&lt;/li&gt;
  &lt;li&gt;Disallowed root login over ssh&lt;/li&gt;
  &lt;li&gt;Disabled password login over ssh&lt;/li&gt;
  &lt;li&gt;Installed and configured fail2ban&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This, in theory, should keep most of the riff-raff off of it.  I hope.&lt;/p&gt;

&lt;h3 id=&quot;wireguard&quot;&gt;Wireguard&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.wireguard.com/&quot;&gt;Wireguard&lt;/a&gt; is a new-ish player in the VPN space, but they are gaining a lot of traction for being easy to configure, and fairly lightweight.&lt;/p&gt;

&lt;p&gt;Again, I followed a basic setup guide from &lt;a href=&quot;https://theorangeone.net/posts/wireguard-getting-started/&quot;&gt;TheOrangeOne&lt;/a&gt;, this is another pretty straightforward setup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install Wireguard on both sides&lt;/li&gt;
  &lt;li&gt;Write the config files for the server and the client&lt;sup id=&quot;fnref:wg&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:wg&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
  &lt;li&gt;Bring up the wireguard service on the Server&lt;/li&gt;
  &lt;li&gt;Bring up the wireguard service on the client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At some point I will educate myself about the firewall well enough to block SSH traffic from
anything outside that VPN IP range on the server as another layer of security.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/self-hosting/2020/11/15/step3.html&quot;&gt;Step 3: Putting it all together&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:router&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;I use an Amplifi Instant mesh setup from Ubiquiti which actually works very well as long  as you don’t want to tinker with it too much.  The the WebUI setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bypass DNS Cache&lt;/code&gt; has to be enabled, otherwise the router acts as a proxy for DNS requests, submitting the requests and serving them back to the device.  This can be seen in the PiHole logs easily, since the only device that shows up is the router. &lt;a href=&quot;#fnref:router&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:proxy&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;A reverse proxy just takes inbound traffic and directs it to the correct location/port/service. &lt;a href=&quot;#fnref:proxy&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wg&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Client and server in this case referring to the &lt;em&gt;Wireguard&lt;/em&gt; Client and server, my home server is the client in this case, and the VPS is the server. &lt;a href=&quot;#fnref:wg&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Adding a layer</summary></entry><entry><title type="html">Step 1: Laying the Groundwork</title><link href="http://localhost:4000/self-hosting/2020/10/18/step1.html" rel="alternate" type="text/html" title="Step 1: Laying the Groundwork" /><published>2020-10-18T00:00:00-04:00</published><updated>2020-10-18T00:00:00-04:00</updated><id>http://localhost:4000/self-hosting/2020/10/18/step1</id><content type="html" xml:base="http://localhost:4000/self-hosting/2020/10/18/step1.html">&lt;h2 id=&quot;from-the-bottom-up&quot;&gt;From the Bottom Up&lt;/h2&gt;

&lt;p&gt;Knowing where I want to go, means I know exactly where I need to start.  I’ve got the hardware, but
it’s currently running EndeavourOS, and that’s not going to work for me.  I want to run it on
CentOS, and knowing I’ll be accessing it remotely, means I should be able to do a minimal install of
CentOS on the hardware and attach my external storage as part of the file system.&lt;/p&gt;

&lt;h2 id=&quot;the-process&quot;&gt;The Process&lt;/h2&gt;

&lt;p&gt;My Goal here was to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Install CentOS 7&lt;/li&gt;
  &lt;li&gt;Install Docker&lt;/li&gt;
  &lt;li&gt;Test the docker install&lt;/li&gt;
  &lt;li&gt;Install Docker Compose&lt;/li&gt;
  &lt;li&gt;Test the basics to make sure Docker &amp;amp; Docker Compose were working as intended.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;No plan survives contact with the &lt;s&gt;Enemy&lt;/s&gt; Computer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-operating-system&quot;&gt;The Operating System&lt;/h3&gt;

&lt;p&gt;I had a whole stack of issues getting CentOS to work, everything from struggles with bad USB drives
(maybe?) to the machine sleeping whenever it felt like it.  I suspect most of those struggles were
my own doing, nonetheless…off with it’s head!!  As it were.&lt;/p&gt;

&lt;p&gt;I did actually get CentOS kinda working, and I got docker installed, but I screwed up the install
process and ended up installing the entire OS on my external drive, which was a not-good thing.&lt;/p&gt;

&lt;p&gt;I ended up using Fedora Server&lt;sup id=&quot;fnref:F32&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:F32&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; instead of CentOS. The install process seemed to go more smoothly,
perhaps because I’d fixed some of the bugs in my process, but whatever the reason may be, I
currently have Fedora 32 installed on my laptop, which is hardwired&lt;sup id=&quot;fnref:wifi&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:wifi&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; to a dumb switch hanging off my
router.  Nifty.  DHCP reservation with a name gives me pseudo-DNS access to my laptop, including the
Fedora Server GUI, called “Cockpit” which I really didn’t know was a “thing”.  Cockpit is pretty nice, but mostly
useless for what I need, it works well and all, but I prefer the command line for most things, but I
do like the pretty pictures and graphs it gives me.&lt;/p&gt;

&lt;p&gt;When I re-installed Fedora for the (I think 7&lt;sup&gt;th&lt;/sup&gt;) last time I managed to setup the drives the correct
way.&lt;/p&gt;

&lt;p&gt;Volume Groups:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ent_vgs.png&quot; alt=&quot;enterprise_vols&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Main OS Volume Group:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ent_fedora_vg.png&quot; alt=&quot;fedora_vg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Data Volume Group:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ent_data_vg.png&quot; alt=&quot;data_vg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;&lt;em&gt;Note the pretty pictures from Cockpit.  Ain’t they pretty?&lt;/em&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;I’ve got two VGs, one for the data, and another for the OS type files. In this case they are on
separate physical drives.  This should in theory allow me to expand if I need more storage by simply adding an additional drive(s), this should also allow the system to boot in the event something happens to the external drive, or it doesn’t mount right.  The internal drive will host most of the crucial functions this server will be handling, while the external will be used for data storage, i.e. my NextCloud storage.&lt;/p&gt;

&lt;p&gt;I also setup key-based authentication on my server to allow me to authenticate from my laptop to the
server without having to type in a password.  While you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-copy-id&lt;/code&gt; method, I
actually used the Fedora Server GUI for that, which worked like a champ, but I couldn’t find a way
to prevent password based SSH attempts in the GUI.  Removing that was easy enough (see the command
reference I used in the references section. &lt;sup id=&quot;fnref:sshd&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:sshd&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;)&lt;/p&gt;

&lt;h3 id=&quot;docker&quot;&gt;Docker!&lt;/h3&gt;

&lt;p&gt;Thankfully Docker provides a very solid install guide for installing the docker-engine&lt;sup id=&quot;fnref:dock-guide&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:dock-guide&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;
unfortunately the base install process doesn’t quite work for Fedora 32.  With some very very clever
Google-fu, googling the error, led me to an open Bug report&lt;sup id=&quot;fnref:bug&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:bug&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;, with an additional step needed to complete the install, once that was done:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the &lt;span class=&quot;s2&quot;&gt;&quot;hello-world&quot;&lt;/span&gt; image from the Docker Hub.
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;amd64&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;BOOM!  Docker installed.&lt;/p&gt;

&lt;h4 id=&quot;dns-is-a-pita&quot;&gt;DNS Is a PITA&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/alwaysdns.jpg&quot; alt=&quot;always_dns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had some issues around DNS when installing Docker, which took a long, convoluted path to fix, and
I honestly don’t remember everything I did to get it working, I restarted Docker, and built (and
later removed) a docker daemon.conf file, but it did work, right up until I tried to get Docker
compose working.  I want to put the fix here because I think it should fix DNS issues within Docker
as well as Docker compose.&lt;/p&gt;

&lt;p&gt;The short version is that in Fedora/RedHat/CentOS recent versions the OS uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nftables&lt;/code&gt; by default, instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt;; this allows for better support of IPv4 and IPv6 addresses and such. The issue is that docker doesn’t like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nftbles&lt;/code&gt;, so that’s fun.  It’s easily fixable by modifying a single line in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewalld.conf&lt;/code&gt; file. Simply changing the line: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirewalldBackend=nftables&lt;/code&gt; to:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FirewalldBackend=iptables&lt;/code&gt; will fix the issue.  The Bug report and fix can be found
&lt;a href=&quot;https://github.com/docker/for-linux/issues/957&quot;&gt;here&lt;/a&gt;.  Ideally that will be fixed in the future,
and it won’t be required.&lt;/p&gt;

&lt;h3 id=&quot;docker-compose&quot;&gt;Docker-Compose&lt;/h3&gt;

&lt;p&gt;Docker-compose is essentially a tool that simplifies the building of applications. While many
applications run on a single server and serve a single function using just a convoluted collection
bash script, python scripts, rust files, basic libraries etc. the vast majority of applications in
the world use a lot of assorted components: a web server, a database, a script that pulls data from
another source, etc. Compose is a simple way to bundle all of these things together to create
multiple containers that all talk to each other to create a full fledge application, which can be
started with just a single command.&lt;/p&gt;

&lt;p&gt;Docker-compose is written and provided by the team that maintains Docker, and the documentation can
be found in the same location ( &lt;a href=&quot;https://docs.docker.com/compose/gettingstarted/&quot;&gt;Docker-compose getting started&lt;/a&gt; ) The documentation is very very solid, and provides everything needed to get up and running.&lt;/p&gt;

&lt;p&gt;Aside from the aforementioned DNS issue, I really had no issues getting compose up and running.&lt;/p&gt;

&lt;h2 id=&quot;current-state&quot;&gt;Current state&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Installed &lt;s&gt;CentOS 7&lt;/s&gt; Fedora 32&lt;/li&gt;
  &lt;li&gt;Installed Docker&lt;/li&gt;
  &lt;li&gt;Tested the docker install&lt;/li&gt;
  &lt;li&gt;Installed Docker Compose&lt;/li&gt;
  &lt;li&gt;Tested the basics to make sure Docker &amp;amp; Docker Compose were working as intended.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All told this took me about 10-12 hours, mostly fighting with the CentOS install. I spread that out
over a couple of weekends, and some evenings, mixed in with the other things life demands I do.&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Install NextCloud&lt;/li&gt;
  &lt;li&gt;Figure out how to actually effectively host NextCloud&lt;/li&gt;
  &lt;li&gt;Sort out the reverse proxy methods, and if I actually need one or not.  I expect that I will use
traefik for a reverse proxy just because it looks pretty straightforward to learn, and it’s wildly
popular.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;step-2&quot;&gt;Step 2&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/self-hosting/2020/11/01/step2.html&quot;&gt;Step 2: Laying the Groundwork&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:F32&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://getfedora.org/en/server/download/&quot;&gt;Fedora 32&lt;/a&gt; &lt;a href=&quot;#fnref:F32&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:wifi&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;We’re not going to talk about wifi. OK? &lt;a href=&quot;#fnref:wifi&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:sshd&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The tutorial I used can be found &lt;a href=&quot;https://ostechnix.com/configure-ssh-key-based-authentication-linux/&quot;&gt;here&lt;/a&gt; but the short version is: Put the key file on the remote server, turn off password based authentication in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/ssh/sshd_config&lt;/code&gt; file, and restart ssh. &lt;a href=&quot;#fnref:sshd&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:dock-guide&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The Install guide can be found &lt;a href=&quot;https://docs.docker.com/engine/install/fedora/&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;#fnref:dock-guide&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:bug&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;The issue stems from the fact that cgroups v2 isn’t supported by containerd 1.3 or lower.  The fix recommended by the docker team can be found &lt;a href=&quot;https://github.com/docker/for-linux/issues/955#issuecomment-694825085&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;#fnref:bug&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">From the Bottom Up</summary></entry><entry><title type="html">Choosing a Linux Distro</title><link href="http://localhost:4000/beginners/2020/10/11/which-linux.html" rel="alternate" type="text/html" title="Choosing a Linux Distro" /><published>2020-10-11T00:00:00-04:00</published><updated>2020-10-11T00:00:00-04:00</updated><id>http://localhost:4000/beginners/2020/10/11/which-linux</id><content type="html" xml:base="http://localhost:4000/beginners/2020/10/11/which-linux.html">&lt;h2 id=&quot;so-many-choices-so-few-computers&quot;&gt;So Many choices, so few computers&lt;/h2&gt;

&lt;p&gt;As I mentioned there are literally thousands of Linux distributions floating around the internet, so
how is someone new to the world of Linux supposed to know which one is right for them? It can seem
overwhelming at first glance, but lets take a look at a few things, like what makes up a “distro”
(That’s the cool way to say distribution), what different distros offer, and what really matters
when choosing a distro to install.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-distro-exactly&quot;&gt;What is a distro, exactly?&lt;/h2&gt;

&lt;p&gt;Let’s start with the basics, what, exactly, is a Linux distribution?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Linux_distribution&quot;&gt;Wikipedia&lt;/a&gt; has this to say:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;A Linux distribution (often abbreviated as distro) is an operating system made from a software collection that is based upon the Linux kernel and, often, a package management system. Linux users usually obtain their operating system by downloading one of the Linux distributions, which are available for a wide variety of systems ranging from embedded devices (for example, OpenWrt) and personal computers (for example, Linux Mint) to powerful supercomputers (for example, Rocks Cluster Distribution).
&lt;br /&gt;A typical Linux distribution comprises a Linux kernel, GNU tools and libraries, additional software, documentation, a window system (the most common being the X Window System), a window manager, and a desktop environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So a Linux distro is really just a collection of software, libraries, combined with a version(s) of
the Linux kernel.  All packaged together to make a working operating system.&lt;/p&gt;

&lt;p&gt;The major differences between distros really boil down to the package manager, the default Desktop
Environment (we’ll get to what that is in a bit), and what software comes included.&lt;/p&gt;

&lt;h3 id=&quot;package-managers&quot;&gt;Package Managers&lt;/h3&gt;

&lt;p&gt;The package manager is just the tool used to install software that doesn’t come bundled with the
distribution.  There is great debate about which package manager is the “best”, and like all things
opinion, there is no one right answer. It really comes down to what
features/options/widgets/gadgets/geegaws are included, and what matters to the user.  All packages
managers do the same thing: they find software in a repository and install it on the computer, they
also update the software when new versions come out.&lt;/p&gt;

&lt;p&gt;Some have a GUI (Graphical User Interface) so you don’t have to remember the exact commands to type
into a terminal, which is nice for those that like the pointy-clicky method for interacting with
their computers. Most modern Linux distros include a package manager with a GUI, but not all.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A word of advice to new users: Don’t let a GUI package manager option determine your decision, if
you’re going to use Linux, you might as well get over being afraid of the terminal, you &lt;strong&gt;will&lt;/strong&gt;
need it at some point&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;desktop-environments&quot;&gt;Desktop Environments&lt;/h3&gt;

&lt;p&gt;This is the thing that makes a computer look a certain way, it’s how the desktop background is
applied, what the icons and colors are, and most include file managers, text editors, those nifty
bars that show you what applications are open and what time it is, and all the other stuff that
makes up the majority of user interactions with a computer.  At some point I’ll expound ad nauseam
about &lt;a href=&quot;/beginners/customization/configuration/2020/12/06/desktop-environments.html&quot;&gt;Desktop Environments&lt;/a&gt;. Not here though, I will provide a quick list and description of each of
them though:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnome.org/&quot;&gt;Gnome&lt;/a&gt; Definitely different than Windows or OSX, lots of stuff included,
not lightweight at all&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://xfce.org/&quot;&gt;XFCE&lt;/a&gt; Pretty lightweight, very customizable, very solid set of software
included&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Cinnamon_(desktop_environment)&quot;&gt;Cinnamon&lt;/a&gt; Very similar to Windows,
very solid, based on an older version of Gnome, but still updated and maintained regularly&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mate-desktop.org/&quot;&gt;MATE&lt;/a&gt; also based on an older version of Gnome, again still very
popular and well maintained.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://kde.org/&quot;&gt;KDE&lt;/a&gt; Another very popular DE with a good looking interface, and lots of very
nice themes, animations, and looks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are several more, which I’ll cover in another post, but these are 5 of the more popular
options.&lt;/p&gt;

&lt;p&gt;Something important to remember: You can install pretty much any Desktop Environment on any distro,
so even if a distro ships with a DE you don’t like, you can change it to one that you do like,
pretty easily.&lt;/p&gt;

&lt;h2 id=&quot;my-recommendations&quot;&gt;My Recommendations&lt;/h2&gt;

&lt;p&gt;This post is likely to become pretty big over time, and I absolutely detest being forced to read
7,000 words to find the information I want.  So I’m going to put my generic recommendations right
here, kinda near the top.&lt;/p&gt;

&lt;h3 id=&quot;ubuntu&quot;&gt;&lt;a href=&quot;https://ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Ubuntu is pretty universally recommended for new Linux users, with good reason.  The company that
manages it (Canonical) is stable and has been around for a long time.  It’s not going anywhere, it’s
incredibly popular, and I don’t know that I’ve come across software for Linux that won’t run on it.
It uses the Gnome desktop environment by default, which is very good looking, yet doesn’t attempt to
emulate either the Windows or the OSX look and feel.&lt;/p&gt;

&lt;p&gt;Ubuntu is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stable&lt;/code&gt; release which means updates are packaged and made available in intervals, but
they are pretty well tested by the time they’re released.  So the software will be a little slow,
but things shouldn’t break when they get updates.&lt;/p&gt;

&lt;p&gt;If you’re new, and just want to see what this “Linux thing is all about”, use Ubuntu.&lt;/p&gt;

&lt;h3 id=&quot;fedora&quot;&gt;&lt;a href=&quot;https://getfedora.org/&quot;&gt;Fedora&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Fedora is another very solid choice for new users, especially people that are interested in working
in IT, or in supporting Linux in an enterprise environment.  Fedora is the bleeding edge of what
will become Red Hat Enterprise Linux (RHEL), which is very widely used by large companies,
especially in the U.S. (Ubuntu/Canonical seems to have more of the market share in other countries,
though RHEL is still widely used)&lt;/p&gt;

&lt;p&gt;Fedora uses the DNF package manger which is very solid, and pretty much all Linux software is available in the RPM format used by the DNF package manager.&lt;/p&gt;

&lt;p&gt;Fedora is also a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stable&lt;/code&gt; release, but packages seem to be released faster than Ubuntu.&lt;/p&gt;

&lt;p&gt;If your new and think you want to work on Linux for a living, give Fedora a try, or if you’re new
and just want something simple that works, it’s a good option in that scenario as well.&lt;/p&gt;

&lt;h3 id=&quot;endeavouros&quot;&gt;&lt;a href=&quot;https://endeavouros.com/&quot;&gt;EndeavourOS&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;EndeavourOS is a very different beastie than my other two generic recommendations. It’s a new
distro (at the time of this writing it’s been around for just over a year) but it is based on a
distro that’s been around for a long time, so even if the EndeavourOS team called it quits (unlikely
I believe) an installed instance of EdeavourOS could be used pretty easily.  EndeavourOS is based on
Arch, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rolling&lt;/code&gt; release distro, which means packages are available essentially as soon as the
developers make them available to the public.  Arch is known for being difficult to install (I’ve
never tried it, but there are tutorials and guides to make it easier), EndeavourOS however has a
“click next” type installer which makes it very simple to install, and it works quite well in my
experience.&lt;/p&gt;

&lt;p&gt;If you want to play, and get a chance to really break things, or if you’re running very new hardware
this really might be the choice for you.&lt;/p&gt;

&lt;h3 id=&quot;do-not-install-kali&quot;&gt;Do Not Install Kali&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;I’m new to Linux and I want to install Kali, how do I do it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a question I’ve seen countless times.  The answer is that you don’t.  Kali is not a Linux
distro meant to be used daily, it’s not meant for new users, it’s just not.&lt;/p&gt;

&lt;p&gt;According to the team that maintains Kali:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;If you are unfamiliar with Linux generally, if you do not have at least a basic level of competence in administering a system, if you are looking for a Linux distribution to use as a learning tool to get to know your way around Linux, or if you want a distro that you can use as a general purpose desktop installation, Kali Linux is probably not what you are looking for.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes.  I know.  It looks cool on Mr. Robot.  You can make any version of Linux look like that.  Yes
it’s got &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l33t h@x0r&lt;/code&gt; tools.  You can install those on just about any distro.  (You shouldn’t unless
you understand what they’re for and how they work though.)&lt;/p&gt;

&lt;p&gt;Kali is a tool which has a very specific use case, if you meet that use case, I’m willing to bet
you’re not reading this website looking for basic Linux information.&lt;/p&gt;

&lt;p&gt;If you want to use Kali, you should have enough knowledge to figure out how to install it with out
asking for help on Reddit.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I know it comes up in reference to “security and Linux” a lot.  It’s not that kind of security.
It’s a tool to see how secure a network is.  If you’re looking to hide your activity on the
internet, you want &lt;a href=&quot;https://www.qubes-os.org/&quot;&gt;QubesOS&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;distro-options&quot;&gt;Distro Options&lt;/h2&gt;

&lt;p&gt;If you want some more information, or want to know more about different distros, I’m going to try to
keep this section updated, with the distros I come across that I see frequently.  This is not a
comprehensive list by any means, just some info on the distros I see referenced frequently with some
information about them.&lt;/p&gt;

&lt;h3 id=&quot;stable-vs-rolling&quot;&gt;Stable vs Rolling&lt;/h3&gt;

&lt;p&gt;There are two major types of release/update cycles:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Stable:  Stable doesn’t mean “won’t break” it just means releases for the distro (not
applications) are packaged together and sent out in one big chunk, so you get things like: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ubuntu
20.04 Focal Fossa&lt;/code&gt; which will have all of the core things that make up the Distro in one single
update package, where the system is upgraded from the old version to the new version.  These
updates are generally tested together and in theory everything should play nicely. Like all things
computery, that may not always hold true.  The applications not considered part of the core distro
will still be updated when the app developers make their updates available, so updates will still
happen outside of the major release for the distro.&lt;/li&gt;
  &lt;li&gt;Rolling:  Rolling release cycles are just that, constant (by comparison to stable) updates, when a
part of the kernel is updated, the package is made available and users can update just that
little piece.  This does mean that there is a potential for things to not work quite right with a
specific system configuration, but these things are generally quickly identified and documented.
Personally I’ve never had a problem with a rolling release, but I’m just one person.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-my-list-is-formatted&quot;&gt;How My List is formatted&lt;/h3&gt;

&lt;p&gt;Many distros are based on a different distro, or upstream distro, which can also be installed, so as
I go through this list I’ll use different level headings to show if a distro is forked from another
major distro or not.  It looks like this:&lt;/p&gt;

&lt;h3 id=&quot;top-level-distro&quot;&gt;Top Level Distro&lt;/h3&gt;

&lt;h4 id=&quot;fork-of-the-top-level-distro&quot;&gt;Fork of the top level Distro&lt;/h4&gt;

&lt;h5 id=&quot;fork-of-the-fork&quot;&gt;Fork of the Fork&lt;/h5&gt;

&lt;p&gt;Each Heading will be a Link to the distro home page which will have more information than I’m going
to include, and more up to date information.  While I could copy and paste that information here,
that seems silly, and frankly I don’t want to.  What I will do is make it easy for you to go find
information, and make your own decisions.&lt;/p&gt;

&lt;h3 id=&quot;debian&quot;&gt;&lt;a href=&quot;https://www.debian.org/intro/about&quot;&gt;Debian&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Debian is one of the longer running distros, and is what Ubuntu is forked from.  Very solid, though
it’s not as user friendly as Ubuntu.&lt;/p&gt;

&lt;p&gt;All of the Debian forks listed below are stable releases using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt&lt;/code&gt; package manager, and all
have access to the same repositories.&lt;/p&gt;

&lt;h4 id=&quot;ubuntu-1&quot;&gt;&lt;a href=&quot;https://ubuntu.com&quot;&gt;Ubuntu&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Probably one of the most widely used distros ever (for desktop users), run by Canonical it’s a very
very popular distro.  It’s so widely used that most of the time when I find instructions for how to
do something in Linux the instructions default to Ubuntu.  Most software is packaged for Ubuntu,
    which makes using it day to day quite simple.  The default desktop environment is Gnome though
    there are specific images for for other DEs&lt;/p&gt;

&lt;h5 id=&quot;mint&quot;&gt;&lt;a href=&quot;https://linuxmint.com/&quot;&gt;Mint&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Mint came about as an Ubuntu fork, and has grown to have it’s own dedicated following, the Mint team
is responsible for the Cinnamon desktop environment.  Mint is a truly great distribution for helping
someone transition to Linux from windows, as many of the Windows behaviours (bottom left “start
menu”, right click on the desktop, etc.) are replicated in Cinnamon.  It also uses the same package
manager, and repositories for Ubuntu, which means there’s a huge quantity of software easily
available, as well as many guides for how to do things, or solve problems on the internet.&lt;/p&gt;

&lt;h5 id=&quot;xubuntu&quot;&gt;&lt;a href=&quot;https://xubuntu.org/&quot;&gt;Xubuntu&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;This is Ubuntu with the XFCE Desktop Environment&lt;/p&gt;

&lt;h5 id=&quot;lubutnu&quot;&gt;&lt;a href=&quot;https://lubuntu.net/&quot;&gt;Lubutnu&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;This is Ubuntu with the LXDE/LXQT Desktop Environment, which makes the distro very lightweight.&lt;/p&gt;

&lt;h5 id=&quot;kubuntu&quot;&gt;&lt;a href=&quot;https://www.kubuntu.org/&quot;&gt;Kubuntu&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;This is Ubuntu with the KDE Desktop Environment&lt;/p&gt;

&lt;h3 id=&quot;the-red-hat-family&quot;&gt;The Red Hat Family&lt;/h3&gt;
&lt;p&gt;I’m grouping 3 distros together here, although they’re not exactly forked from each other, they are
all related.&lt;/p&gt;

&lt;h4 id=&quot;red-hat-enterprise-linux-rhel&quot;&gt;&lt;a href=&quot;https://www.redhat.com/en&quot;&gt;Red Hat Enterprise Linux (RHEL)&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Red Hat is one of the giants in the Linux world.  In the U.S. I would guess there are more RHEL
servers installed than any other, by a wide margin.&lt;/p&gt;

&lt;p&gt;RHEL is available and can be installed as a workstation, but it’s not Free, it’s $99 for a license at the time of this writing, you can buy it &lt;a href=&quot;https://www.redhat.com/en/store/linux-platforms&quot;&gt;here&lt;/a&gt; if that something that interests you.  Personally I wouldn’t. RHEL is really meant to be a server operating system&lt;/p&gt;

&lt;h4 id=&quot;fedora-1&quot;&gt;&lt;a href=&quot;https://getfedora.org/en/&quot;&gt;Fedora&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Fedora is really solid stable release distro (It’s what I’m currently using) Gnome is the default
desktop environment that ships with it. &lt;a href=&quot;https://spins.fedoraproject.org/&quot;&gt;Fedora Spins&lt;/a&gt; offer several other options for desktop environments&lt;/p&gt;

&lt;p&gt;Fedora is the upstream source for a lot of the packages that go into RHEL, but it is technically a
different project and RHEL isn’t really forked from it.  If it were a Facebook status relationship
it would be “It’s Complicated.” Fedora is really the best option for those that are interested in
understanding and working with RHEL, and want to try it as a workstation.&lt;/p&gt;

&lt;h4 id=&quot;centos&quot;&gt;&lt;a href=&quot;https://www.centos.org/&quot;&gt;CentOS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;CentOS is essentially the free version of RHEL. It’s primary use case is as an appliance or server,
it’s not really geared towards being a workstation. The source code is provided by Red Hat, and my
understanding is that CentOS is used as a test bed for some RHEL features.  If you want to host your
own server of some sort, this is an excellent choice, since many of the things you might want to do
have been done by large companies, the odds that you’ll be able to find an answer for any problems
you encounter are very high.&lt;/p&gt;

&lt;h3 id=&quot;open-suse&quot;&gt;&lt;a href=&quot;https://www.opensuse.org/&quot;&gt;Open Suse&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Suse Linux is one of the older Linux distributions around, it’s been used in the corporate world for
a long time, and there are still services that use it almost exclusively.  OpenSuse is the free
version of Suse.  (Big shocker there, I know) Suse uses a different package manager than the
Fedora/Red Hat/CentOS ecosystem, but that package manager does use RPM files, which means just about
anything that will run on the RHEL type distros will work with Suse.  It’s a bit of a niche distro,
but it does have something very few (if any) other do, both a rolling and a stable release version.
Which makes it very useful for people that are developing for or supporting Suse servers.  It’s
fairly newbie friendly, and has strong community support, if not a huge community of users.&lt;/p&gt;

&lt;h3 id=&quot;i-use-arch-btw&quot;&gt;I use &lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch&lt;/a&gt; btw&lt;/h3&gt;
&lt;p&gt;Arch Linux and “I use Arch btw” have become a bit of a meme on the internet.  There was a point in
time when Arch users were known to tell people at every opportunity that they used Arch, it was
viewed by some as a badge of honor.  That is because Arch is not something that is easy to install,
or manage. If installing Linux is riding a bicycle installing Arch is like getting a box of parts
that have to be assembled. In other words you have to read carefully and follow directions, and understand what your machine is doing to successfully install Arch.  If you want to learn about how your operating system works, Arch is a great choice, it’s a rolling release distro which ensures the very latest packages are available, and it provides really granular control of your machine.&lt;/p&gt;

&lt;p&gt;Arch has brought one of the single best resources to the Linux community in the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Main_page&quot;&gt;ArchWiki&lt;/a&gt; This is a truly fantastic resource for anyone using Linux.  Go ahead and bookmark it.  While the instructions are all geared towards Arch users, the information typically applies across the board, even if the specific instructions don’t.&lt;/p&gt;

&lt;h4 id=&quot;endeavouros-1&quot;&gt;&lt;a href=&quot;https://endeavouros.com/&quot;&gt;EndeavourOS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Arch with training wheels, well mostly just Arch with a GUI “click next” installer, you still get
all of the benefits (and challenges) of a rolling release with a simple install method. The
installer provided by the EOS team allows for granular control of the packages, or a simple
“recommended” install option.  The installer works well, and will have you up and running pretty
quickly.&lt;/p&gt;

&lt;h4 id=&quot;manjaro&quot;&gt;&lt;a href=&quot;https://manjaro.org/&quot;&gt;Manjaro&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;If EndeavourOS is arch with training wheels, Manjaro is a tricycle.  While Manjaro is still
technically a rolling release the team behind Manajaro often holds packages back for a week or so to
hopefully catch any major failures before they’re released to the Manjaro community.  As a result
the distro is fairly stable.&lt;/p&gt;

&lt;h3 id=&quot;gentoo&quot;&gt;&lt;a href=&quot;https://www.gentoo.org/&quot;&gt;Gentoo&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To stretch an analogy to the point of breaking, if Arch is a bicycle you have to assemble, Gentoo is
a pile of metal that has to be formed in to parts to be assembled into a bicycle.  It is designed to
be &lt;strong&gt;exactly&lt;/strong&gt; what you need and nothing more, nothing less.  Being this granular requires some
additional work on your part.  Again, once you get it working, you will know in great detail how
your machine works.&lt;/p&gt;

&lt;h3 id=&quot;linux-from-scratch-lfs&quot;&gt;&lt;a href=&quot;http://www.linuxfromscratch.org/&quot;&gt;Linux from Scratch (LFS)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;LFS is not a pile of metal to build a bicycle, LFS is a list of locations of ore, instructions on
how to mine the ore, create the parts, and assemble the bicycle.  LFS is really more of a training
tool than an actual distro meant to be used.  LFS is a fantastic way to learn about how Linux works
at a very low level.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further Reading&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/03/what-is-linux.html&quot;&gt;What is Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/04/why-linux.html&quot;&gt;Why should you use Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/customization/configuration/2020/12/06/desktop-environments.html&quot;&gt;Chosing a Desktop Environment&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">So Many choices, so few computers</summary></entry><entry><title type="html">Planning my Own Cloud</title><link href="http://localhost:4000/self-hosting/2020/10/10/hosting-beginning.html" rel="alternate" type="text/html" title="Planning my Own Cloud" /><published>2020-10-10T00:00:00-04:00</published><updated>2020-10-10T00:00:00-04:00</updated><id>http://localhost:4000/self-hosting/2020/10/10/hosting-beginning</id><content type="html" xml:base="http://localhost:4000/self-hosting/2020/10/10/hosting-beginning.html">&lt;h2 id=&quot;the-goal&quot;&gt;The Goal&lt;/h2&gt;

&lt;p&gt;I’ve used cloud services pretty steadily for the last 10 years or so.  My documents, résumés,
pictures, everything really, all lives in the cloud.  As companies and governments get more and more
blatant about their disregard for our privacy in favor of their profits, I’ve moved from cloud
service, to cloud service.  I’ve used everything from Google to iCloud, to Microsoft’s OneDrive, and
ended up settling on NextCloud hosted in a GPDR compliant country.  Which is good, really good
actually.  Except for one issue, it’s &lt;em&gt;slow&lt;/em&gt;, like dial-up slow.  As a place to archive it’s fine,
but for anything I want to use on a semi-speedy basis, it’s essentially unusable. (Think finding a
picture from a year ago to paste in a group chat)&lt;/p&gt;

&lt;p&gt;So to have an option that is relatively speedy, but still as secure as I can get it, I’ve come to
the conclusion that I need to self-host my own NextCloud instance.&lt;/p&gt;

&lt;p&gt;Which sounds easy, and can be, assuming you only want to access your data on your home network.
Which is a perfectly viable option for many people.&lt;/p&gt;

&lt;p&gt;I like to be complex, and do things the hard way.  So here’s the End State goal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Privately hosted &lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt; instance&lt;/li&gt;
  &lt;li&gt;Privately hosted Website (very very future state)&lt;/li&gt;
  &lt;li&gt;Internal DNS via &lt;a href=&quot;https://pi-hole.net/&quot;&gt;PiHole&lt;/a&gt; for ad blocking&lt;/li&gt;
  &lt;li&gt;Reverse Proxy for traffic routing via &lt;a href=&quot;https://traefik.io/&quot;&gt;Traefik&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think at this point everything will be running on an old laptop I’ve got laying around.  It’s got
8G of RAM (upgradable) and a Core i5 so for my use case I think it should be able to handle
everything, at least to begin with.&lt;/p&gt;

&lt;p&gt;I’ll be running Docker, and I &lt;em&gt;think&lt;/em&gt; Docker Compose to manage the containers&lt;/p&gt;

&lt;h3 id=&quot;the-tools&quot;&gt;The Tools&lt;/h3&gt;

&lt;p&gt;Starting from the base up:&lt;/p&gt;

&lt;h4 id=&quot;hardware&quot;&gt;Hardware&lt;/h4&gt;

&lt;p&gt;The home network is Gig fiber to a Ubiquiti Amplifi mesh router&lt;/p&gt;

&lt;p&gt;The Laptop in question is a Dell Latitude E6440 with a Core i5 and (currently) 8 gigs of Ram, with a
relatively small SSD (120G), most of the storage will be hosted on an external 2TB SSD.&lt;/p&gt;

&lt;h4 id=&quot;software&quot;&gt;Software&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Base Operating System: CentOS
    &lt;ul&gt;
      &lt;li&gt;As I’ve mentioned, in my day job I do some Linux Admin type stuff, and I’ve got a fair amount
of experience with CentOS in a server role.  It does that very well.  It works, and I’m
comfortable in the RHEL/Fedora/CentOS space.  I figure I might as well stick with something
I’m comfortable with.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Docker/Docker Compose for container management
    &lt;ul&gt;
      &lt;li&gt;I’ll be using Docker compose for simplicity of managing the containers, for upgrades, repairs
etc.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Nextcloud for most cloud functions
    &lt;ul&gt;
      &lt;li&gt;NextCloud offers an incredibly simple UI for others to use, as well as compatibility with
pretty much every OS out there.  In a house with: Windows, Linux, ChromeOS, iOS, iPadOS;
interoperability and ease of use is a &lt;strong&gt;huge&lt;/strong&gt; thing&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;PiHole for DNS/Ad Blocking
    &lt;ul&gt;
      &lt;li&gt;PiHole is great for dropping ad traffic in a blackhole never to report telemetry again.  This
may end up running on a spare RasperryPi that I have laying around, but my intention at this
time is to put it on the main server.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-path&quot;&gt;The Path&lt;/h3&gt;

&lt;p&gt;This is where things start to get a bit muddy.  This is kind of what I’m thinking right now:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Work through some basic docker tutorials&lt;/li&gt;
  &lt;li&gt;Work through some basic docker compose tutorials&lt;/li&gt;
  &lt;li&gt;Add Traefik to the main server, and work with pointing it at different containers&lt;/li&gt;
  &lt;li&gt;Install a NextCloud docker container&lt;/li&gt;
  &lt;li&gt;Install a PiHole container&lt;/li&gt;
  &lt;li&gt;Profit???&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All of this is of course subject to whims of fate and time. So who knows what this path will look
like in the end.  I’d like to think that I’m going to continue to update this as I go through the
process, so we’ll see how that goes.&lt;/p&gt;

&lt;p&gt;Continue this series &lt;a href=&quot;/self-hosting/2020/10/18/step1.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">The Goal</summary></entry><entry><title type="html">Why Use Linux?</title><link href="http://localhost:4000/beginners/2020/10/04/why-linux.html" rel="alternate" type="text/html" title="Why Use Linux?" /><published>2020-10-04T00:00:00-04:00</published><updated>2020-10-04T00:00:00-04:00</updated><id>http://localhost:4000/beginners/2020/10/04/why-linux</id><content type="html" xml:base="http://localhost:4000/beginners/2020/10/04/why-linux.html">&lt;h2 id=&quot;why-linux&quot;&gt;Why Linux?&lt;/h2&gt;

&lt;p&gt;The first question in the process of switching from Windows or MacOS is pretty much always “Why   &lt;br /&gt;
should I use Linux?” Which is a valid question, and an important one.  The answer to that question&lt;br /&gt;
can shape a person’s path through the world of Linux. While people go to Linux communities and ask
that question on daily basis, it’s ultimately  a question each person has to answer for themselves.&lt;/p&gt;

&lt;p&gt;There are a few major reason for someone to switch to Linux&lt;/p&gt;

&lt;h3 id=&quot;the-why-not-crowd&quot;&gt;The why not crowd&lt;/h3&gt;

&lt;p&gt;Let’s be honest, this group already knows why they want to use Linux, this is the hobbyists. They’re
going to spend hours finding the perfect distribution, tweaking it just right, and then blowing the
whole thing away and trying something new.  It’s fun, it’s cheap entertainment, and they just want
to play around with all the options out there.&lt;/p&gt;

&lt;h3 id=&quot;the-career-crowd&quot;&gt;The career crowd&lt;/h3&gt;

&lt;p&gt;This is the group that wants to work in the IT field in some capacity and they want to use Linux on
their personal machines so they’re fully familiar with it when they go to work in an enterprise and
are confronted with 35,000 Linux servers they are now responsible for managing, or they’re software
developers and want to develop on Linux for any number of reasons from ease of workflow, to
available tools.&lt;/p&gt;

&lt;h3 id=&quot;the-privacy-crowd&quot;&gt;The privacy crowd&lt;/h3&gt;

&lt;p&gt;This is probably the biggest influx of new users in the last few years.  Windows 10 collects a
&lt;strong&gt;ton&lt;/strong&gt; of data on the users.  This is concerning to many people, and rightfully so.  So they’ve
asked how to prevent this data collection, and one of the answers is inevitably “Switch to Linux!”
With the source code being available and audited by anyone and everyone, it’s difficult to sneak in
dirty rotten data collection tools to a Linux distribution, though not impossible.&lt;/p&gt;

&lt;p&gt;Since many of the Linux distributions are built, distributed, and maintained by small groups of individuals, or
non-profit organizations, there’s very little reason to collect user data.  The few major distributions maintained, managed, or owned by for profit companies (Primarily Canonical-Ubunutu, Suse-Suse &amp;amp; OpenSuse, RedHat-RedHat Enterprise Linux, Fedora, CentOS) are still heavily contributed to by the community, and have open source code.  Those companies make their money from support contracts sold to businesses, not from selling user data&lt;/p&gt;

&lt;p&gt;While there are many reasons individuals chose to use Linux those are the three biggest reasons I
see.&lt;/p&gt;

&lt;p&gt;I’ll address &lt;em&gt;which&lt;/em&gt; Linux Distribution to use in &lt;a href=&quot;/beginners/2020/10/11/which-linux.html&quot;&gt;another post&lt;/a&gt;. (Spoiler: It’s &lt;strong&gt;not&lt;/strong&gt; Kali, it’s
&lt;strong&gt;NEVER&lt;/strong&gt; going to be Kali)&lt;/p&gt;

&lt;h2 id=&quot;related-posts&quot;&gt;Related Posts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/03/what-is-linux.html&quot;&gt;What is Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/beginners/2020/10/11/which-linux.html&quot;&gt;Which Linux should you use?&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Why Linux? The first question in the process of switching from Windows or MacOS is pretty much always “Why should I use Linux?” Which is a valid question, and an important one. The answer to that question can shape a person’s path through the world of Linux. While people go to Linux communities and ask that question on daily basis, it’s ultimately a question each person has to answer for themselves.</summary></entry><entry><title type="html">What is Linux anyway?</title><link href="http://localhost:4000/beginners/2020/10/03/what-is-linux.html" rel="alternate" type="text/html" title="What is Linux anyway?" /><published>2020-10-03T00:00:00-04:00</published><updated>2020-10-03T00:00:00-04:00</updated><id>http://localhost:4000/beginners/2020/10/03/what-is-linux</id><content type="html" xml:base="http://localhost:4000/beginners/2020/10/03/what-is-linux.html">&lt;h2 id=&quot;what-is-linux&quot;&gt;What is “Linux”?&lt;/h2&gt;

&lt;p&gt;Linux is just an Operating system.  In the grand scheme of things it’s not much
different from Windows, MacOS, iOS, iPadOS, Android, BSD or any other operating system.&lt;/p&gt;

&lt;p&gt;It’s the collection of files that make up all the little bits and pieces of things that makes your computer a
computer, and not a very expensive brick.  For the every day user it defines how the user interacts with
their computer, what software can be installed, how their pictures are displayed, and all of the
other things that someone might do on their computer.&lt;/p&gt;

&lt;p&gt;There are a couple of major differences between Linux and the other Operating systems someone might
encounter in the world.&lt;/p&gt;

&lt;h3 id=&quot;foss--free-as-in-freedom-not-beer-open-source-software&quot;&gt;FOSS- Free (as in Freedom, not beer) Open Source Software&lt;/h3&gt;

&lt;p&gt;The source code for the Linux kernel is “Open Source”, which really  just means you can go to GitHub
and see all of the code that makes up the Linux kernel &lt;a href=&quot;https://github.com/torvalds/linux&quot;&gt;here&lt;/a&gt; You
can take that code, modify it, change it, do anything you want to it.&lt;/p&gt;

&lt;p&gt;The same can be said for many if not most of the Linux distributions floating around the internet.
The source code can be modified and changed and given away as much as a person desires. There are
some limitations based on licenses, but that’s a conversation for another day.&lt;/p&gt;

&lt;p&gt;This is a huge difference from Windows and MacOS in that those companies make money by selling their
operating systems, so they keep their code “proprietary” and don’t openly share their code.  You
can’t take the source code for windows and modify it, or change it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A note about the word &lt;strong&gt;FREE&lt;/strong&gt; as used in this context.  ‘Free’ here means ability, it does not
mean without cost.  While most variations of Linux are available for no cost, there are variations
that charge for assorted features, addons, service etc.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;distributions&quot;&gt;Distributions&lt;/h3&gt;

&lt;p&gt;Since the source code for the Linux kernel is open, and people are allowed and even encouraged take
it and change it and add things to it, people do all of those things.  So when someone is going to
switch to Linux, one of the first decisions to make is which distribution to use.&lt;/p&gt;

&lt;p&gt;There are literally thousands of distributions floating around the internet, all of which do
slightly different things, from different color schemes, to different updating methods.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href=&quot;https://distrowatch.com/&quot;&gt;Distrowatch&lt;/a&gt; to see a small sample of the available
options out there.  (I’ll cover choosing a distribution in &lt;a href=&quot;/beginners/2020/10/11/which-linux.html&quot;&gt;another post&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Continue this series with &lt;a href=&quot;/beginners/2020/10/04/why-linux.html&quot;&gt;Why Use Linux&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">What is “Linux”?</summary></entry></feed>